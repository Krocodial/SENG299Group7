
	// on routes that end in /reservations
	// ----------------------------------------------------
	apiRouter.route('/reservations')

		// create a reservation (accessed at POST http://localhost:8080/reservations)
		.post(function(req, res) {
			
			var reservation = new Reservation();		// create a new instance of the Reservation model
			reservation.name = req.body.name;  // set the reservations name (comes from the request)
			reservation.reservationname = req.body.reservationname;  // set the reservations reservationname (comes from the request)
			reservation.password = req.body.password;  // set the reservations password (comes from the request)

			reservation.save(function(err) {
				if (err) {
					// duplicate entry
					if (err.code == 11000) 
						return res.json({ success: false, message: 'A reservation with that reservationname already exists. '});
					else 
						return res.send(err);
				}

				// return a message
				res.json({ message: 'Reservation created!' });
			});

		})

		// get all the reservations (accessed at GET http://localhost:8080/api/reservations)
		.get(function(req, res) {

			Reservation.find({}, function(err, reservations) {
				if (err) res.send(err);

				// return the reservations
				res.json(reservations);
			});
		});

	// on routes that end in /reservations/:reservation_id
	// ----------------------------------------------------
	apiRouter.route('/reservations/:reservation_id')

		// get the reservation with that id
		.get(function(req, res) {
			Reservation.findById(req.params.reservation_id, function(err, reservation) {
				if (err) res.send(err);

				// return that reservation
				res.json(reservation);
			});
		})

		// update the reservation with this id
		.put(function(req, res) {
			Reservation.findById(req.params.reservation_id, function(err, reservation) {

				if (err) res.send(err);

				// set the new reservation information if it exists in the request
				if (req.body.name) reservation.name = req.body.name;
				if (req.body.reservationname) reservation.reservationname = req.body.reservationname;
				if (req.body.password) reservation.password = req.body.password;

				// save the reservation
				reservation.save(function(err) {
					if (err) res.send(err);

					// return a message
					res.json({ message: 'Reservation updated!' });
				});

			});
		})

		// delete the reservation with this id
		.delete(function(req, res) {
			Reservation.remove({
				_id: req.params.reservation_id
			}, function(err, reservation) {
				if (err) res.send(err);

				res.json({ message: 'Successfully deleted' });
			});
		});
